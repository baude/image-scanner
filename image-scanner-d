#!/usr/bin/env python
# Copyright (C) 2015 Brent Baude <bbaude@redhat.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

''' Starts an uwsgi instance of our flash REST API '''

import subprocess
import ConfigParser
import os
import sys
import signal
import ctypes
import argparse


libc = ctypes.CDLL('libc.so.6')
PR_SET_PDEATHSIG = 1
SIGINT = signal.SIGINT
SIGTERM = signal.SIGTERM


def set_death_signal(signal):
    libc.prctl(PR_SET_PDEATHSIG, signal)


def set_death_signal_int():
    set_death_signal(SIGINT)


class ConfigValues(object):
    conf_file = "/etc/image-scanner/image-scanner.conf"

    def __init__(self):
        self.has_conf = True if os.path.exists(self.conf_file) else False
        if self.has_conf:
            self.config = ConfigParser.RawConfigParser()
            self.config.read(self.conf_file)

    def return_config_val(self, parse_args, sysargs):
        '''
        Returns the proper values for host, port, and dockerhost with inputs
        from the parseargs

        The logic for determining them are the follow order:
            1. Passed by command line parameter
            2. Configuration file if present
            3. Fall back default set by parseargs
        '''

        host = parse_args.host if ('--host' in sysargs or not self.has_conf)\
            else self.config.get('main', 'hostip') if\
            self.config.has_section('main') and\
            self.config.has_option('main', 'hostip') else parse_args.host
        port = parse_args.port if ('--port' in sysargs or not self.has_conf)\
            else self.config.get('main', 'port')\
            if self.config.has_section('main')\
            and self.config.has_option('main', 'port') else parse_args.port
        dockerhost = parse_args.dockerhost\
            if ('--dockerhost' in sysargs or not self.has_conf)\
            else self.config.get('main', 'dockerhost')\
            if self.config.has_section('main') and\
            self.config.has_option('main', 'dockerhost')\
            else parse_args.dockerhost
        return host, port, dockerhost

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Image-Scanner Daemon')
    parser.add_argument('--port', help='Port for the image-scanner-d',
                        type=int, default=5001)
    parser.add_argument('--host', help='IP to bind the daemon to',
                        default='127.0.0.1')
    parser.add_argument('--dockerhost', help='Docker host',
                        default='unix://var/run/docker.sock')

    args = parser.parse_args()

    config_values = ConfigValues()
    host, port, dockerhost = config_values.return_config_val(args, sys.argv)

    host_port = "{0}:{1}".format(host, port)
    if os.path.exists('image_scanner/') and 'rest.py' in \
            os.listdir('image_scanner/'):
        rest_py = 'image_scanner/rest.py'
    elif os.path.exists('/usr/lib/python2.7/site-packages/'
                        'image_scanner/rest.py'):
        rest_py = '/usr/lib/python2.7/site-packages/image_scanner/rest.py'
    else:
        print "Unable to find rest.py"
        sys.exit(1)

    cmd = ['uwsgi', '--plugin', 'python,http', '--socket', host_port,
           '--protocol=http', '--set', 'dockerhost={0}'.format(dockerhost),
           '--wsgi-file', rest_py]
    subprocess.call(cmd, preexec_fn=set_death_signal_int)
